#include <iostream>
#include <wait.h>
#include "zconf.h"
#include <stdio.h>
#include <unistd.h>
int main() {
//    fork - развлетвление. Единственный способ создания нового процесса
//    Создает точную копию исходного процесса, включая все дескрипторы файлов, регистры и др.
//    Копия выполняется независимо от исходного.
//    Возвращает нулевое значение для дочернего и PID для родительского. При неудаче -1.
//    execve - выполнить команду, передаем команду, параметры...
//    В наиболее общем случае имеет 3 параметра: имя вып. файла, указатель на массив аргументов, указ. на массив окружения
//    waitpid(-1, &statloc, 0) - ожидание закрытия дочернего процесса. Закрывается в том случае, если дочерний процесс равен -1
    std::cout << "Hello --- Fork\n";
    if (fork() != 0) {
        std::cout << "Wait, Children process is started\n";
        waitpid(-1, 0, 0);
        std::cout << "Children process completed\n";
    } else {
        std::cout << "I'm children process\n";
        exit(0);
    }
    return 0;
}